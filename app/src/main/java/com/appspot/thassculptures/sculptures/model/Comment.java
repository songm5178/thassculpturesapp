/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2015-08-03 17:34:38 UTC)
 * on 2015-10-28 at 14:26:35 UTC 
 * Modify at your own risk.
 */

package com.appspot.thassculptures.sculptures.model;

/**
 * Model definition for Comment.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the sculptures. For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Comment extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String author;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String content;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String entityKey;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("is_approved")
  private Boolean isApproved;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key("sculpture_key")
  private String sculptureKey;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private String timestamp;

  /**
   * @return value or {@code null} for none
   */
  public String getAuthor() {
    return author;
  }

  /**
   * @param author author or {@code null} for none
   */
  public Comment setAuthor(String author) {
    this.author = author;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getContent() {
    return content;
  }

  /**
   * @param content content or {@code null} for none
   */
  public Comment setContent(String content) {
    this.content = content;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getEntityKey() {
    return entityKey;
  }

  /**
   * @param entityKey entityKey or {@code null} for none
   */
  public Comment setEntityKey(String entityKey) {
    this.entityKey = entityKey;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public Boolean getIsApproved() {
    return isApproved;
  }

  /**
   * @param isApproved isApproved or {@code null} for none
   */
  public Comment setIsApproved(Boolean isApproved) {
    this.isApproved = isApproved;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getSculptureKey() {
    return sculptureKey;
  }

  /**
   * @param sculptureKey sculptureKey or {@code null} for none
   */
  public Comment setSculptureKey(String sculptureKey) {
    this.sculptureKey = sculptureKey;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public String getTimestamp() {
    return timestamp;
  }

  /**
   * @param timestamp timestamp or {@code null} for none
   */
  public Comment setTimestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  @Override
  public Comment set(String fieldName, Object value) {
    return (Comment) super.set(fieldName, value);
  }

  @Override
  public Comment clone() {
    return (Comment) super.clone();
  }

}
